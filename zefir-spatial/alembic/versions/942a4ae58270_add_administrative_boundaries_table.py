"""Add Administrative Boundaries table

Revision ID: 942a4ae58270
Revises: d8fe99050004
Create Date: 2022-02-01 00:34:41.110876

"""
import geoalchemy2
import sqlalchemy as sa
from alembic import op
from config import settings

# revision identifiers, used by Alembic.
revision = "942a4ae58270"
down_revision = "d8fe99050004"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "administrative_boundary",
        sa.Column("terc", sa.String(length=7), nullable=False),
        sa.Column("import_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "geom",
            geoalchemy2.types.Geometry(
                geometry_type="MULTIPOLYGON",
                srid=settings.DB_SRID,
                spatial_index=False,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["import_id"], ["import_metadata.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("terc", "import_id"),
    )
    op.create_index(
        "idx_administrative_boundary_geom",
        "administrative_boundary",
        ["geom"],
        unique=False,
        postgresql_using="gist",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "idx_administrative_boundary_geom",
        table_name="administrative_boundary",
        postgresql_using="gist",
    )
    op.drop_table("administrative_boundary")
    # ### end Alembic commands ###
